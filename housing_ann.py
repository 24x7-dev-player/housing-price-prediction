# -*- coding: utf-8 -*-
"""housing_ann.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uWSMgFehDHhctfZebcT8NUyPG7T677S-
"""

import pandas as pd
import numpy as np
import seaborn as sns
housing = pd.read_csv("house_pricing.csv")
housing

housing.describe().transpose()

summary = housing.describe()
summary = summary.transpose()
print(summary)
X = housing.drop(['medianHouseValue'],axis=1)
y = housing['medianHouseValue']

from sklearn.preprocessing import MinMaxScaler
scaler = MinMaxScaler()
x_scale = scaler.fit_transform(X)
x_scale

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(x_scale,y,test_size = 0.2,random_state = 0)

from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)
X_test

import keras
from keras.models import Sequential
from keras.layers import Dense
ann = Sequential()
ann.add(Dense(7,input_dim = 6, activation='relu'))
ann.add(Dense(3, activation='relu'))
ann.add(Dense(1, activation='linear'))
ann.compile(optimizer="Adam", loss='mean_squared_error', metrics=['accuracy'])
# ann.fit(X_train, y_train, batch_size = 20, epochs = 100)
ann.fit(X_train,y_train, epochs=1000, verbose=1)

y_pred = ann.predict(X_test)
y_pred

ann.predict_proba([[[41,880,129,322,126,8]]])[0][0]

score = ann.evaluate(X_test, y_test, verbose=0)
print('Test loss:', score[0])

import joblib
joblib.dump(ann, "housing_price_prediction.pkl")

